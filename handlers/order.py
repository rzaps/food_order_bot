#  –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç —Ñ–∞–π–ª?
#
# –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–±–∞–≤–ª—è—Ç—å –±–ª—é–¥–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É.
# –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ä–∑–∏–Ω—É.
# –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.
# –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤.


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É (add_to_cart)
#
# –ü–æ–ª—É—á–∞–µ—Ç ID –±–ª—é–¥–∞ –∏–∑ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏.
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —ç—Ç–æ –±–ª—é–¥–æ –≤ –ë–î.
# –î–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å user_cart.
# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
# –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ—Ä–∑–∏–Ω—ã (show_cart)
#
# –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –±–ª—é–¥ –≤ –∫–æ—Ä–∑–∏–Ω–µ.
# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º–æ–π.
# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ (place_order)
#
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —á—Ç–æ-—Ç–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ.
# –°–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑ –≤ –ë–î.
# –û—á–∏—â–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É.
#
# –†–∞–∑–±–æ—Ä –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
# 1Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª—é–¥–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É (add_to_cart)
# ‚úÖ –ï—Å–ª–∏ –±–ª—é–¥–æ —É–∂–µ –µ—Å—Ç—å, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.
# ‚úÖ –ï—Å–ª–∏ –Ω–µ—Ç ‚Äì –¥–æ–±–∞–≤–ª—è–µ–º —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º 1.
# ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º.
#
# 2Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –±–ª—é–¥–∞ (remove_from_cart)
# ‚úÖ –ï—Å–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ >1 —à—Ç., —É–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.
# ‚úÖ –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∞—Å—å 1 —à—Ç., —É–¥–∞–ª—è–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é.
# ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞.
#
# 3Ô∏è‚É£ –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ—Ä–∑–∏–Ω—ã (show_cart)
# ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –±–ª—é–¥ —Å –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º.
# ‚úÖ –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å" –Ω–∞–ø—Ä–æ—Ç–∏–≤ –∫–∞–∂–¥–æ–≥–æ –±–ª—é–¥–∞.
# ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É.




import telebot
from database.models import Order, MenuItem, User
from bot_instance import bot

user_cart = {}  # –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ—Ä–∑–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (user_id: {dish_name: (price, quantity)})


# === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª—é–¥–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É ===
@bot.callback_query_handler(func=lambda call: call.data.startswith("add_"))
def add_to_cart(call):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –±–ª—é–¥–æ –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"""
    user_id = call.message.chat.id
    dish_id = int(call.data.split("_")[1])  # –ü–æ–ª—É—á–∞–µ–º ID –±–ª—é–¥–∞ –∏–∑ callback_data

    dish = MenuItem.get_dish_by_id(dish_id)
    if dish:
        name, price, _ = dish
        if user_id not in user_cart:
            user_cart[user_id] = {}

        if name in user_cart[user_id]:
            user_cart[user_id][name] = (
            price, user_cart[user_id][name][1] + 1)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        else:
            user_cart[user_id][name] = (
            price, 1)  # –î–æ–±–∞–≤–ª—è–µ–º –±–ª—é–¥–æ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º 1

        bot.answer_callback_query(call.id,
                                  f"‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ: {name} (–≤ –∫–æ—Ä–∑–∏–Ω–µ: {user_cart[user_id][name][1]} —à—Ç.)")
    else:
        bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞: –±–ª—é–¥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")


# === –£–¥–∞–ª–µ–Ω–∏–µ –±–ª—é–¥–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã ===
@bot.callback_query_handler(func=lambda call: call.data.startswith("remove_"))
def remove_from_cart(call):
    """–£–º–µ–Ω—å—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª—é–¥–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ –∏–ª–∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é"""
    user_id = call.message.chat.id
    dish_name = call.data.split("_", 1)[1]  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞

    if user_id in user_cart and dish_name in user_cart[user_id]:
        price, quantity = user_cart[user_id][dish_name]

        if quantity > 1:
            user_cart[user_id][dish_name] = (price, quantity - 1)
            bot.answer_callback_query(call.id,
                                      f"‚ûñ –£–±—Ä–∞–Ω–æ: {dish_name} (–æ—Å—Ç–∞–ª–æ—Å—å: {quantity - 1} —à—Ç.)")
        else:
            del user_cart[user_id][dish_name]
            bot.answer_callback_query(call.id,
                                      f"‚ùå {dish_name} —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã")

    else:
        bot.answer_callback_query(call.id,
                                  "‚ùå –û—à–∏–±–∫–∞: –±–ª—é–¥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ.")


# === –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ—Ä–∑–∏–Ω—ã ===
@bot.message_handler(commands=['cart'])
def show_cart(message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    user_id = message.chat.id
    cart_items = user_cart.get(user_id, {})

    if cart_items:
        total_price = sum(
            price * quantity for price, quantity in cart_items.values())
        cart_text = "\n".join(
            [f"{dish} - {price}‚ÇΩ x {quantity}" for dish, (price, quantity) in
             cart_items.items()])

        # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±–ª—é–¥
        markup = telebot.types.InlineKeyboardMarkup()
        for dish in cart_items:
            markup.add(telebot.types.InlineKeyboardButton(f"‚ùå –£–¥–∞–ª–∏—Ç—å {dish}",
                                                          callback_data=f"remove_{dish}"))

        bot.send_message(user_id,
                         f"üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n{cart_text}\n\nüí∞ –ò—Ç–æ–≥–æ: {total_price}‚ÇΩ",
                         reply_markup=markup)
    else:
        bot.send_message(user_id, "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")


# === –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ===
@bot.message_handler(commands=['order'])
def place_order(message):
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑ –∏ –æ—á–∏—â–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É"""
    user_id = message.chat.id
    cart_items = user_cart.get(user_id, {})

    if cart_items:
        total_price = sum(
            price * quantity for price, quantity in cart_items.values())
        item_names = ", ".join([f"{dish} x{quantity}" for dish, (_, quantity) in
                                cart_items.items()])

        user = User.get_user(user_id)
        if user:
            Order.create_order(user[0], item_names,
                               total_price)  # user[0] ‚Äì ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
            bot.send_message(user_id,
                             f"‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!\nüì¶ {item_names}\nüí∞ –°—É–º–º–∞: {total_price}‚ÇΩ")
            user_cart[user_id] = {}  # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        else:
            bot.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            print(user)
    else:
        bot.send_message(user_id,
                         "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ –±–ª—é–¥–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫–∞–∑–æ–º!")
